load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "assertions",
    srcs = [
        "confirmation.go",
        "manager.go",
        "poster.go",
        "sync.go",
    ],
    importpath = "github.com/offchainlabs/bold/assertions",
    visibility = ["//visibility:public"],
    deps = [
        "//api",
        "//api/db",
        "//chain-abstraction:protocol",
        "//chain-abstraction/sol-implementation",
        "//challenge-manager/types",
        "//containers",
        "//containers/option",
        "//containers/threadsafe",
        "//layer2-state-provider",
        "//logs/ephemeral",
        "//runtime",
        "//solgen/go/rollupgen",
        "//util/stopwaiter",
        "@com_github_ccoveille_go_safecast//:go-safecast",
        "@com_github_ethereum_go_ethereum//accounts/abi/bind",
        "@com_github_ethereum_go_ethereum//common",
        "@com_github_ethereum_go_ethereum//log",
        "@com_github_ethereum_go_ethereum//metrics",
        "@com_github_ethereum_go_ethereum//rpc",
        "@com_github_pkg_errors//:errors",
    ],
)

go_test(
    name = "assertions_test",
    size = "small",
    srcs = [
        "manager_test.go",
        "poster_test.go",
        "sync_test.go",
    ],
    embed = [":assertions"],
    deps = [
        "//chain-abstraction:protocol",
        "//challenge-manager",
        "//challenge-manager/types",
        "//containers/threadsafe",
        "//runtime",
        "//solgen/go/bridgegen",
        "//solgen/go/mocksgen",
        "//solgen/go/rollupgen",
        "//testing",
        "//testing/casttest",
        "//testing/mocks/state-provider",
        "//testing/setup:setup_lib",
        "@com_github_ethereum_go_ethereum//accounts/abi",
        "@com_github_ethereum_go_ethereum//accounts/abi/bind",
        "@com_github_ethereum_go_ethereum//common",
        "@com_github_stretchr_testify//require",
    ],
)
