load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

test_suite(
    name = "endtoend_suite",
    tags = ["manual"],
    tests = [
        ":endtoend_test",
        "//testing/endtoend/backend:backend_test",
    ],
)

go_test(
    name = "endtoend_test",
    timeout = "long",
    srcs = [
        "e2e_test.go",
        "helpers_test.go",
    ],
    embed = [":endtoend"],
    tags = [
        "exclusive-if-local",
        "manual",
    ],
    deps = [
        "//api",
        "//chain-abstraction:protocol",
        "//chain-abstraction/sol-implementation",
        "//challenge-manager",
        "//challenge-manager/types",
        "//layer2-state-provider",
        "//solgen/go/rollupgen",
        "//testing",
        "//testing/endtoend/backend",
        "//testing/mocks/state-provider",
        "//testing/setup:setup_lib",
        "//util",
        "@com_github_ethereum_go_ethereum//:go-ethereum",
        "@com_github_ethereum_go_ethereum//accounts/abi/bind",
        "@com_github_ethereum_go_ethereum//common",
        "@com_github_ethereum_go_ethereum//core/types",
        "@com_github_ethereum_go_ethereum//ethclient",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_sync//errgroup",
    ],
)

go_library(
    name = "endtoend",
    testonly = 1,
    srcs = ["expectations.go"],
    importpath = "github.com/OffchainLabs/bold/testing/endtoend",
    visibility = ["//visibility:public"],
    deps = [
        "//chain-abstraction:protocol",
        "//runtime",
        "//solgen/go/rollupgen",
        "//testing/setup:setup_lib",
        "//util",
        "@com_github_ethereum_go_ethereum//accounts/abi/bind",
        "@com_github_stretchr_testify//require",
    ],
)
